<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>jarv</title><link>https://jarv.org/</link><description></description><lastBuildDate>Thu, 31 May 2018 00:00:00 -0400</lastBuildDate><item><title>Removing private repos</title><link>https://jarv.org/removing-private-repos.html</link><description>&lt;p&gt;Today I decided to remove all private repositories from GitHub.
Why? Interesting that having private repositories generally meant that
I was not being as careful about managing secrets properly. Checking in
API tokens, keys and especially cloud tokens into git &lt;em&gt;never&lt;/em&gt; a good idea
and looking through some of my old private repos I was doing exactly that.
So for others who are interested in going from a &lt;em&gt;developer&lt;/em&gt; GitHub account
back to free I highly recommend doing it! Granted it's only $5 a month savings
but I definitely feel a bit more transparent than I did 15 minutes ago …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">jarv</dc:creator><pubDate>Thu, 31 May 2018 00:00:00 -0400</pubDate><guid isPermaLink="false">tag:jarv.org,2018-05-31:/removing-private-repos.html</guid></item><item><title>Building cmdchallenge using Lambda and API Gateway in the AWS free-tier with Docker and Go</title><link>https://jarv.org/building-cmdchallenge.html</link><description>&lt;p&gt;Have you ever thought about building a side-project for fun without spending a lot on hosting?
This post might be for you. With the most tech-buzz-wordy title I could conjure up here is 
a quick overview of how &lt;a href="https://cmdchallenge.com"&gt;cmdchallenge.com&lt;/a&gt; is built.
The site is a simple web application side-project that executes shell commands
remotely in a docker container in AWS. The front-end gives the feeling of a normal terminal but underneath
it is sending whatever commands you give it remotely on an EC2 instance inside a Docker container.&lt;/p&gt;
&lt;p&gt;The source code for most of it is located &lt;a href="https://github.com/jarv/cmdchallenge"&gt;on github …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">jarv</dc:creator><pubDate>Mon, 24 Apr 2017 00:00:00 -0400</pubDate><guid isPermaLink="false">tag:jarv.org,2017-04-24:/building-cmdchallenge.html</guid></item><item><title>User Submitted Solutions</title><link>https://jarv.org/user-submitted-solutions.html</link><description>&lt;p&gt;Adding to the interesting &lt;a href="/191-hello-worlds.html"&gt;191 ways to echo hello world&lt;/a&gt; I've now added the ability
to see &lt;a href="https://cmdchallenge.com/s/"&gt;user-submitted solutions&lt;/a&gt; to &lt;a href="https://cmdchallenge.com"&gt;cmdchallenge&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There are some gems if you dig through them including maybe the longest regex I've ever seen for
pulling an IP address out of a file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;(&lt;/span&gt;25&lt;span class="o"&gt;[&lt;/span&gt;0-5&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;2&lt;span class="o"&gt;[&lt;/span&gt;0-4&lt;span class="o"&gt;][&lt;/span&gt;0-9&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;01&lt;span class="o"&gt;]&lt;/span&gt;?&lt;span class="o"&gt;[&lt;/span&gt;0-9&lt;span class="o"&gt;][&lt;/span&gt;0-9&lt;span class="o"&gt;]&lt;/span&gt;?&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="se"&gt;\.&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;25&lt;span class="o"&gt;[&lt;/span&gt;0-5&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;2&lt;span class="o"&gt;[&lt;/span&gt;0-4&lt;span class="o"&gt;][&lt;/span&gt;0-9&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;01&lt;span class="o"&gt;]&lt;/span&gt;?&lt;span class="o"&gt;[&lt;/span&gt;0-9&lt;span class="o"&gt;][&lt;/span&gt;0-9&lt;span class="o"&gt;]&lt;/span&gt;?&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="se"&gt;\.&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;25&lt;span class="o"&gt;[&lt;/span&gt;0-5&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;2&lt;span class="o"&gt;[&lt;/span&gt;0-4&lt;span class="o"&gt;][&lt;/span&gt;0-9&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;01&lt;span class="o"&gt;]&lt;/span&gt;?&lt;span class="o"&gt;[&lt;/span&gt;0-9&lt;span class="o"&gt;][&lt;/span&gt;0-9&lt;span class="o"&gt;]&lt;/span&gt;?&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="se"&gt;\.&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;25&lt;span class="o"&gt;[&lt;/span&gt;0-5&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;2&lt;span class="o"&gt;[&lt;/span&gt;0-4&lt;span class="o"&gt;][&lt;/span&gt;0-9&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;01&lt;span class="o"&gt;]&lt;/span&gt;?&lt;span class="o"&gt;[&lt;/span&gt;0-9&lt;span class="o"&gt;][&lt;/span&gt;0-9&lt;span class="o"&gt;]&lt;/span&gt;?&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Also scrolling down the page of &lt;a href="https://cmdchallenge.com/s/#/corrupted_text"&gt;solutions to the corrupted text problem&lt;/a&gt;
is glorious.&lt;/p&gt;
&lt;p&gt;&lt;s&gt;The solutions are not updated regularly right …&lt;/s&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">jarv</dc:creator><pubDate>Sat, 04 Mar 2017 00:00:00 -0500</pubDate><guid isPermaLink="false">tag:jarv.org,2017-03-04:/user-submitted-solutions.html</guid></item><item><title>figlet breakout</title><link>https://jarv.org/figlet-breakout.html</link><description>&lt;p&gt;I was looking for a cool ending for &lt;a href="https://cmdchallenge.com"&gt;cmdchallenge&lt;/a&gt; and decided
to dust off a 2 year old javascript project which created a breakout game from figlet
fonts. Not quite a full re-write but fixed a lot of bugs and did away completely with
coffee-script. More info on the &lt;a href="https://github.com/jarv/figlet-breakout"&gt;github page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Or you can &lt;a href="https://www.jarv.org/figlet-breakout/#/click%20me%20to%20play"&gt;click here to play&lt;/a&gt;.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">jarv</dc:creator><pubDate>Fri, 24 Feb 2017 00:00:00 -0500</pubDate><guid isPermaLink="false">tag:jarv.org,2017-02-24:/figlet-breakout.html</guid></item><item><title>191 ways to echo hello world on the command line</title><link>https://jarv.org/191-hello-worlds.html</link><description>&lt;p&gt;It's been about 12 days since the launch of &lt;a href="https://cmdchallenge.com"&gt;cmdchallenge&lt;/a&gt;, a weekend project
to create some common command-line tasks that can be done in a single line of bash.
One common request has been to share user-submitted solutions. Or to put it another way,
you may be wondering &lt;em&gt;what do random people on the internet and hackernews type if you give them
some basic command-line tasks and a shell prompt?&lt;/em&gt;  Well lucky for me this is no longer a mystery!&lt;/p&gt;
&lt;p&gt;Starting off with Challenge #1:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://cmdchallenge.com/#/hello_world"&gt;CMD Challenge #1&lt;/a&gt;: &lt;strong&gt;print "hello world" at the bash prompt&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;There has been a lot …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">jarv</dc:creator><pubDate>Wed, 08 Feb 2017 00:00:00 -0500</pubDate><guid isPermaLink="false">tag:jarv.org,2017-02-08:/191-hello-worlds.html</guid></item><item><title>Reddit front-page visualization</title><link>https://jarv.org/reddit-time-lapse.html</link><description>&lt;p&gt;Using data from &lt;a href="https://page-watch.com/#i/eLK"&gt;page-watch.com&lt;/a&gt; this shows
a time-lapse of reddit overnight on January 20th taken at 5minute intervals.
This excludes images which is why there are occasional jumps where advertisements are.&lt;/p&gt;
&lt;video width="100%" height="100%" src="https://cdn.rawgit.com/jarv/page-watch-data/master/reddit/reddit.webm"  controls&gt;&lt;/video&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">jarv</dc:creator><pubDate>Wed, 21 Jan 2015 00:00:00 -0500</pubDate><guid isPermaLink="false">tag:jarv.org,2015-01-21:/reddit-time-lapse.html</guid></item><item><title>page watch</title><link>https://jarv.org/page-watch.html</link><description>&lt;p&gt;This is probably my last side project before I relocate and start my new job, presenting &lt;a href="https://page-watch.com"&gt;page-watch&lt;/a&gt;.
I created it to scratch a personal itch that I had which was I was finding it difficult to track changes on websites
that were relatively static with infrequent updates. There are other page monitoring web tools out there, what makes this
one different is that it is a) dead simple b) has an rss option.&lt;/p&gt;
&lt;p&gt;If you find it useful I would love to hear what you think, I will hopefully write a follow-up post with more technical
details when my life …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">jarv</dc:creator><pubDate>Tue, 20 Jan 2015 00:00:00 -0500</pubDate><guid isPermaLink="false">tag:jarv.org,2015-01-20:/page-watch.html</guid></item><item><title>A new new blog</title><link>https://jarv.org/new-new-blog.html</link><description>&lt;p&gt;Before this year is over it's time for a small redesign. I've replaced the old custom theme, &lt;a href="https://github.com/jarv/water-iris"&gt;water-iris&lt;/a&gt; with
a new theme &lt;a href="https://github.com/jarv/jarvican"&gt;jarvican&lt;/a&gt;.  Most of my updates these days are when I redesign the blog and I think
I'm fine with that.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">jarv</dc:creator><pubDate>Thu, 18 Dec 2014 00:00:00 -0500</pubDate><guid isPermaLink="false">tag:jarv.org,2014-12-18:/new-new-blog.html</guid></item><item><title>edX on the Raspberry Pi</title><link>https://jarv.org/edx-raspberry-pi.html</link><description>&lt;p&gt;&lt;a href="http://edx.org"&gt;edx.org&lt;/a&gt; can now be run on the raspberry pi! Using &lt;a href="http://www.ansibleworks.com"&gt;Ansible&lt;/a&gt; and the
&lt;a href="http://github.com/edx/configuration"&gt;same configuration scripts&lt;/a&gt; we use in production it's pretty straightforward to setup.  More details on the edX &lt;a href="http://engineering.edx.org/2013/12/edx-on-the-raspberry-pi-a-portable-classroom/"&gt;engineering blog post&lt;/a&gt;.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">jarv</dc:creator><pubDate>Wed, 01 Jan 2014 00:00:00 -0500</pubDate><guid isPermaLink="false">tag:jarv.org,2014-01-01:/edx-raspberry-pi.html</guid><category>python</category></item><item><title>A new blog</title><link>https://jarv.org/new-blog.html</link><description>&lt;p&gt;Hello world! It's been awhile and what better way to re-visit a blog then to do a re-design. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/getpelican/pelican"&gt;pelican&lt;/a&gt; with a &lt;a href="https://github.com/jarv/water-iris"&gt;custom theme&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://bourbon.io/"&gt;bourbon/sass&lt;/a&gt; - CSS compilation and general typography&lt;/li&gt;
&lt;li&gt;&lt;a href="http://neat.bourbon.io/"&gt;bourbon/neat&lt;/a&gt; - For layout and responsive design&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I've cleaned house and removed some old articles, kept some of the AVR hacks and hopefully will post updates more than once a year :)&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">jarv</dc:creator><pubDate>Sun, 24 Nov 2013 00:00:00 -0500</pubDate><guid isPermaLink="false">tag:jarv.org,2013-11-24:/new-blog.html</guid></item><item><title>Simple highscore tracking with Python / Flask</title><link>https://jarv.org/simple-highscore-tracking-with-python-flask.html</link><description>&lt;p&gt;Below is a quick tutorial on how flask web framework might be 
used for simple highscore tracking. All of the source code the state game &lt;a href="http://github.com/jarv/thestategame"&gt;is now on github&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This code will accept an AJAX GET or POST at the end of each game so that scores can be tracked and read. Since the use-cases are simple it's easy to write the tests first:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;StateTestCase&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;unittest&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TestCase&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;setUp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;db_fd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;DATABASE&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 
            &lt;span class="n"&gt;tempfile&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mkstemp&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;TESTING&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;test_client&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;init_db&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;tearDown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;db_fd&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;unlink …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">jarv</dc:creator><pubDate>Mon, 17 Dec 2012 22:26:00 -0500</pubDate><guid isPermaLink="false">tag:jarv.org,2012-12-17:/simple-highscore-tracking-with-python-flask.html</guid><category>python</category></item><item><title>The State Game</title><link>https://jarv.org/the-state-game.html</link><description>&lt;p&gt;Below is a recent weekend programming project that I did to play with
canvas. Who doesn't like a geography game?&lt;/p&gt;
&lt;p&gt;It uses a simple svg image for the map with a canvas overlay to detect
state clicks. On the back-end it uses a very short python script with
web.py. Most people who tried it out found the rotation to be annoying
and difficult; for me it makes it more interesting :)&lt;/p&gt;
&lt;p&gt;&lt;a href="https://jarv.github.io/thestategame/"&gt;&lt;img alt="thestategame" src="https://jarv.org/static/thestategame.png"&gt;&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">jarv</dc:creator><pubDate>Sun, 22 Jul 2012 13:16:00 -0400</pubDate><guid isPermaLink="false">tag:jarv.org,2012-07-22:/the-state-game.html</guid><category>python</category></item><item><title>Musical Ms. Pacman Candy Tin Hack</title><link>https://jarv.org/musical-ms-pacman-candy-tin-hack.html</link><description>&lt;p&gt;Here is a weekend hack that uses the  &lt;a href="https://github.com/jarv/PlayTune"&gt;midi to AVR
conversion script and library&lt;/a&gt;. With xmas fast approaching I thought
it would be fun to convert a pacman candy tin to an xmas ornament and
have it play music. Below is the result, pressing a button on the tin
will cycle through three Ms. Pacman songs converted from midi files
found online.&lt;/p&gt;
&lt;iframe src="http://www.youtube.com/embed/hyWlVr72n1M" style="border: none"&gt;&lt;/iframe&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">jarv</dc:creator><pubDate>Sun, 04 Dec 2011 14:53:00 -0500</pubDate><guid isPermaLink="false">tag:jarv.org,2011-12-04:/musical-ms-pacman-candy-tin-hack.html</guid><category>avr</category></item><item><title>Custom musical greeting card for less than $5</title><link>https://jarv.org/custom-musical-greeting-card-for-less-than-5.html</link><description>&lt;p&gt;"You've got a friend in me" played on an attiny85 and two
speakers converted from a midi version of the song:&lt;/p&gt;
&lt;iframe src="http://www.youtube.com/embed/gntKQZFomi8" style="border: none"&gt;&lt;/iframe&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">jarv</dc:creator><pubDate>Sun, 20 Nov 2011 18:03:00 -0500</pubDate><guid isPermaLink="false">tag:jarv.org,2011-11-20:/custom-musical-greeting-card-for-less-than-5.html</guid><category>avr</category></item><item><title>Blinking motion sensor / Mario Brothers Candy Tin</title><link>https://jarv.org/usb-powered-blinking-ir-motion-sensor-mounted-in-a-mario-brothers-candy-tin.html</link><description>&lt;p&gt;With an attiny13A, an IR motion sensor, and a candy Mario Brothers
mushroom tin, this project turns them into a USB powered IR sensor that
also blinks and sings. &lt;/p&gt;
&lt;iframe src="http://www.youtube.com/embed/A2rH835xQhY" style="border: none"&gt;&lt;/iframe&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">jarv</dc:creator><pubDate>Tue, 15 Sep 2009 18:16:00 -0400</pubDate><guid isPermaLink="false">tag:jarv.org,2009-09-15:/usb-powered-blinking-ir-motion-sensor-mounted-in-a-mario-brothers-candy-tin.html</guid></item><item><title>Singing Marioman</title><link>https://jarv.org/singing-marioman.html</link><description>&lt;p&gt;Using an attiny13A and some leds and a speaker create a musical
marioman.&lt;/p&gt;
&lt;iframe src="http://www.youtube.com/embed/rCdSEzUQ3ok" style="border: none"&gt;&lt;/iframe&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">jarv</dc:creator><pubDate>Sun, 24 May 2009 19:37:00 -0400</pubDate><guid isPermaLink="false">tag:jarv.org,2009-05-24:/singing-marioman.html</guid><category>avr</category></item></channel></rss>